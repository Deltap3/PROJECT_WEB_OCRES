import React, { useState } from 'react';
import './Graph.css';
import HorizontalBar from '../HorizontalBar/HorizontalBar.js';
import VerticalBar from '../VerticalBar/VerticalBar.js';
/*
Graph - makes a graph based on the the data and setting fed to the graph.

Currently can make vertical or horizontal bar graphs, expects all numerical data to be greater than 0.

Properties:
* data - an object containing the data to be graphed, uses the keys as labels and the   values for the numeric data.
* horizontal - if true, makes a horizontal bar graph instead (default is vertical). 
* width - the width of the graph - default value is 100%
* height - the height of the graph - default value is based on text size
*/

function Graph(props) {
  // Display Value
  // Value displayed in the corner of the graph, changes based on hover
  var _useState = useState(''),
      displayValue = _useState[0],
      setDisplayValue = _useState[1];

  function hoverBar(key, val) {
    setDisplayValue(key + ': ' + val);
  } // Pre-process the data in order to make a graph
  // Make a copy of the data for processing


  var dataProcessed = JSON.parse(JSON.stringify(props.data)); // Find the largest value

  var max = 0;

  for (var _i = 0, _Object$entries = Object.entries(dataProcessed); _i < _Object$entries.length; _i++) {
    var _Object$entries$_i = _Object$entries[_i],
        key = _Object$entries$_i[0],
        value = _Object$entries$_i[1];

    if (max < value) {
      max = value;
    }
  } // Normalize


  for (var _i2 = 0, _Object$entries2 = Object.entries(dataProcessed); _i2 < _Object$entries2.length; _i2++) {
    var _Object$entries2$_i = _Object$entries2[_i2],
        _key = _Object$entries2$_i[0],
        _value = _Object$entries2$_i[1];
    dataProcessed[_key] = _value / max * 100;
  }

  console.log(Object.keys(dataProcessed));
  return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", {
    className: "DataVis-graph-title"
  }, /*#__PURE__*/React.createElement("h2", null, props.title), /*#__PURE__*/React.createElement("h4", null, displayValue, "\u200C")), /*#__PURE__*/React.createElement("div", {
    className: props.horizontal ? "DataVis-graph-horizontal" : "DataVis-graph-vertical",
    style: {
      height: props.height,
      width: props.width
    }
  }, Object.keys(dataProcessed).map(function (keyVal) {
    return props.horizontal ? /*#__PURE__*/React.createElement(HorizontalBar, {
      label: keyVal,
      width: dataProcessed[keyVal].toString() + '%',
      onHover: function onHover() {
        return hoverBar(keyVal, props.data[keyVal]);
      }
    }) : /*#__PURE__*/React.createElement(VerticalBar, {
      label: keyVal,
      height: dataProcessed[keyVal].toString() + '%',
      onHover: function onHover() {
        return hoverBar(keyVal, props.data[keyVal]);
      }
    });
  })));
}

export default Graph;