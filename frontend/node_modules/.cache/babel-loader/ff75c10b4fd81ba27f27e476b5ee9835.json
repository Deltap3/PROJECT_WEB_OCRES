{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\maist\\\\Documents\\\\4_Fichiers ING4\\\\Web\\\\PROJECT_WEB_OCRES\\\\PROJECT_WEB_OCRES\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { useState } from \"react\";\n\nconst ReactSimpleChart = ({\n  x,\n  yRange = 10,\n  datas\n}) => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        valueVisible = _useState2[0],\n        setValueVisible = _useState2[1];\n\n  let maxValues = 0;\n\n  for (const data of datas) {\n    if (data.value.length !== x.length) throw new Error(\"x length and data value length must be the same.\");\n    maxValues += Math.max(...data.value);\n  }\n\n  const maxValue = maxValues.toString();\n  let maxValueDigits = \"1\";\n\n  for (let i = 0; i < maxValue.length - 1; i++) {\n    maxValueDigits += \"0\";\n  }\n\n  let maxY = parseInt(maxValue) / parseInt(maxValueDigits);\n  if (maxY % 1 === 0) maxY = (maxY + 1) * parseInt(maxValueDigits);else maxY = Math.ceil(maxY) * parseInt(maxValueDigits);\n  const y = [];\n\n  for (let i = 1; i <= yRange; i++) {\n    y.push(maxY / yRange * i);\n  }\n\n  return (\n    /*#__PURE__*/\n    React.createElement(React.Fragment, null,\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        marginBottom: 20\n      }\n    }, datas.map((data, index) =>\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      key: index,\n      style: {\n        display: \"flex\",\n        marginRight: 10\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      style: {\n        width: 20,\n        height: 20,\n        backgroundColor: data.color,\n        marginRight: 10\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(\"span\", null, data.label)))),\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      style: {\n        minHeight: \"100vh\",\n        display: \"flex\",\n        flex: 1\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column-reverse\",\n        flex: 0\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      style: {\n        width: \"100%\",\n        paddingTop: 10,\n        position: \"relative\",\n        top: -7\n      }\n    }, \"0\"), y.map((v, i) =>\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      key: i,\n      style: {\n        display: \"flex\",\n        height: \"\".concat(100 / y.length, \"%\"),\n        borderRight: \"1px solid #000\",\n        width: \"100%\",\n        marginRight: 10\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      style: {\n        position: \"relative\",\n        top: -8\n      }\n    }, v)))), x.map((v, index) =>\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      key: index,\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-end\",\n        alignItems: \"center\",\n        width: \"\".concat(100 / x.length, \"%\")\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column-reverse\",\n        justifyContent: \"flex-start\",\n        width: \"100%\",\n        flex: 1,\n        position: \"relative\"\n      },\n      onMouseOver: () => setValueVisible(index),\n      onMouseLeave: () => setValueVisible(null)\n    }, y.map((v, i) =>\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      key: i,\n      style: {\n        display: \"flex\",\n        alignItems: \"flex-end\",\n        height: \"\".concat(100 / y.length, \"%\"),\n        borderTop: \"1px solid #ababab\"\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column-reverse\",\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"50%\",\n        left: \"50%\",\n        transform: \"translateX(-50%)\"\n      }\n    }, datas.map((data, dataIndex) =>\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      key: dataIndex,\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        background: data.color,\n        height: \"\".concat(data.value[index] / maxY * 100, \"%\")\n      }\n    }, valueVisible === index &&\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      style: {\n        color: \"#fff\"\n      }\n    }, data.value[index]))))),\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      style: {\n        borderTop: \"1px solid #000\",\n        width: \"100%\",\n        textAlign: \"center\",\n        paddingTop: 10\n      }\n    }, v)))))\n  );\n};\n\nexport default ReactSimpleChart;","map":null,"metadata":{},"sourceType":"module"}