{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CAP\\\\Documents\\\\Techno web\\\\PROJECT_WEB_OCRES\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\Components\\\\myWidget.js\";\nimport React, { Component } from 'react';\n\nclass MyWidget extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      people: []\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"http://localhost:3001/posts\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      people: data,\n      loading: false\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"loading...\");\n    }\n\n    if (!this.state.people.length) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"didn't get a person\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.state.people.map(person => React.createElement(\"div\", {\n      key: person.prenom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, person.prenom), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, person.classement), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, person.prenom), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, person.points), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default MyWidget;","map":{"version":3,"sources":["C:/Users/CAP/Documents/Techno web/PROJECT_WEB_OCRES/PROJECT_WEB_OCRES/frontend/src/Components/myWidget.js"],"names":["React","Component","MyWidget","state","loading","people","componentDidMount","url","response","fetch","data","json","setState","render","length","map","person","prenom","classement","points"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACC,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCE,KADmC,GAC3B;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KAD2B;AAAA;;AAMnC,QAAMC,iBAAN,GAA0B;AACtB,UAAMC,GAAG,GAAG,6BAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AAAEP,MAAAA,MAAM,EAAEK,IAAV;AAAgBN,MAAAA,OAAO,EAAE;AAAzB,KAAd;AACH;;AAEDS,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKV,KAAL,CAAWC,OAAf,EAAwB;AACtB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AAED,QAAI,CAAC,KAAKD,KAAL,CAAWE,MAAX,CAAkBS,MAAvB,EAA+B;AAC7B,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACD;;AAED,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKX,KAAL,CAAWE,MAAX,CAAkBU,GAAlB,CAAsBC,MAAM,IAC3B;AAAK,MAAA,GAAG,EAAEA,MAAM,CAACC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMD,MAAM,CAACC,MAAb,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMD,MAAM,CAACE,UAAb,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMF,MAAM,CAACC,MAAb,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMD,MAAM,CAACG,MAAb,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADD,CADH,CADF;AAeD;;AArCgC;;AAuCvC,eAAejB,QAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass MyWidget extends React.Component {\r\n    state = {\r\n        loading: true,\r\n        people: []\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const url = \"http://localhost:3001/posts\";\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        this.setState({ people: data, loading: false });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n          return <div>loading...</div>;\r\n        }\r\n    \r\n        if (!this.state.people.length) {\r\n          return <div>didn't get a person</div>;\r\n        }      \r\n    \r\n        return (\r\n          <div>\r\n            {this.state.people.map(person => (\r\n              <div key={person.prenom}>\r\n                <div>{person.prenom}</div>\r\n                <div>{person.classement}</div>\r\n                <div>{person.prenom}</div>\r\n                <div>{person.points}</div>\r\n                <br />\r\n    \r\n    \r\n              </div>\r\n            ))}\r\n          </div>\r\n        );\r\n      }\r\n}\r\nexport default MyWidget"]},"metadata":{},"sourceType":"module"}