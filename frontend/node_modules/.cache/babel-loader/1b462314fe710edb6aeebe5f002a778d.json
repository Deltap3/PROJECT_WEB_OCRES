{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CAP\\\\Documents\\\\Techno web\\\\PROJECT_WEB_OCRES\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\Components\\\\myWidget.js\";\nimport React, { Component } from 'react';\nexport default class myWidget extends React.Component {\n  /*    state = {\r\n          loading: true,\r\n          people: []\r\n      };\r\n  \r\n      async componentDidMount() {\r\n          const url = \"http://localhost:3001/posts\";\r\n          const response = await fetch(url);\r\n          const data = await response.json();\r\n          this.setState({ people: data, loading: false });\r\n      }\r\n  \r\n      */\n  render() {\n    /*if (this.state.loading) {\r\n        return <div>loading...</div>;\r\n    }\r\n      if (!this.state.people.length) {\r\n        return <div>didn't get a person</div>;\r\n    }*/\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"coucou\", this.state.people.map(person => React.createElement(\"div\", {\n      key: person.prenom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, person.prenom), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, person.points), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/CAP/Documents/Techno web/PROJECT_WEB_OCRES/PROJECT_WEB_OCRES/frontend/src/Components/myWidget.js"],"names":["React","Component","myWidget","render","state","people","map","person","prenom","points"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,QAAN,SAAuBF,KAAK,CAACC,SAA7B,CAAuC;AACtD;;;;;;;;;;;;;AAYME,EAAAA,MAAM,GAAG;AACP;;;;;;AAUA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEK,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,CAAsBC,MAAM,IACzB;AAAK,MAAA,GAAG,EAAEA,MAAM,CAACC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMD,MAAM,CAACC,MAAb,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMD,MAAM,CAACE,MAAb,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADH,CAFL,CADJ;AAcH;;AAtCiD","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class myWidget extends React.Component {\r\n/*    state = {\r\n        loading: true,\r\n        people: []\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const url = \"http://localhost:3001/posts\";\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        this.setState({ people: data, loading: false });\r\n    }\r\n\r\n    */render() {\r\n        /*if (this.state.loading) {\r\n            return <div>loading...</div>;\r\n        }\r\n\r\n        if (!this.state.people.length) {\r\n            return <div>didn't get a person</div>;\r\n        }*/\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                coucou\r\n                {this.state.people.map(person => (\r\n                    <div key={person.prenom}>\r\n                        <div>{person.prenom}</div>\r\n                        <div>{person.points}</div>\r\n                        <br />\r\n\r\n\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}