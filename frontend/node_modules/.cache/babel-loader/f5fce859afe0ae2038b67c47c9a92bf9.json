{"ast":null,"code":"/*!\r\n * destroy\r\n * Copyright(c) 2014 Jonathan Ong\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar ReadStream = require('fs').ReadStream;\n\nvar Stream = require('stream');\n/**\r\n * Module exports.\r\n * @public\r\n */\n\n\nmodule.exports = destroy;\n/**\r\n * Destroy a stream.\r\n *\r\n * @param {object} stream\r\n * @public\r\n */\n\nfunction destroy(stream) {\n  if (stream instanceof ReadStream) {\n    return destroyReadStream(stream);\n  }\n\n  if (!(stream instanceof Stream)) {\n    return stream;\n  }\n\n  if (typeof stream.destroy === 'function') {\n    stream.destroy();\n  }\n\n  return stream;\n}\n/**\r\n * Destroy a ReadStream.\r\n *\r\n * @param {object} stream\r\n * @private\r\n */\n\n\nfunction destroyReadStream(stream) {\n  stream.destroy();\n\n  if (typeof stream.close === 'function') {\n    // node.js core bug work-around\n    stream.on('open', onOpenClose);\n  }\n\n  return stream;\n}\n/**\r\n * On open handler to close stream.\r\n * @private\r\n */\n\n\nfunction onOpenClose() {\n  if (typeof this.fd === 'number') {\n    // actually close down the fd\n    this.close();\n  }\n}","map":null,"metadata":{},"sourceType":"script"}